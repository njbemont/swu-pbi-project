table 'Pricing Bridge'
	lineageTag: a85fec7b-8021-4460-a95f-07a38fb8c114

	column cardNumber
		dataType: int64
		formatString: 0
		lineageTag: 306d6fc0-707c-4dc8-a317-4d13a90edf1e
		summarizeBy: sum
		sourceColumn: cardNumber

		annotation SummarizationSetBy = Automatic

	column cardCount
		dataType: int64
		formatString: 0
		lineageTag: 549856f7-b69d-4c04-a34e-e46a464e0b0f
		summarizeBy: sum
		sourceColumn: cardCount

		annotation SummarizationSetBy = Automatic

	column cardUid
		dataType: string
		lineageTag: 4394f872-36f3-4154-9f25-392d8cd66f49
		summarizeBy: none
		sourceColumn: cardUid

		annotation SummarizationSetBy = Automatic

	column 'expansion.data.id'
		dataType: string
		lineageTag: c5fd92d2-d979-4a93-88ea-88236770b340
		summarizeBy: none
		sourceColumn: expansion.data.id

		annotation SummarizationSetBy = Automatic

	column 'expansion.data.attributes.code'
		dataType: string
		lineageTag: 1f14d585-cc34-4e1f-9861-3e64911fdf3d
		summarizeBy: none
		sourceColumn: expansion.data.attributes.code

		annotation SummarizationSetBy = Automatic

	column 'variantTypes.data.id'
		dataType: string
		lineageTag: e6e11d81-aedb-455f-80b6-d7854d56643d
		summarizeBy: none
		sourceColumn: variantTypes.data.id

		annotation SummarizationSetBy = Automatic

	column 'variantTypes.data.attributes.name'
		dataType: string
		lineageTag: 1b65df67-2693-482c-bc45-8c6436d4db08
		summarizeBy: none
		sourceColumn: variantTypes.data.attributes.name

		annotation SummarizationSetBy = Automatic

	column priceKey =
			
			VAR vId        = 'Pricing Bridge'[id]
			VAR vName      = 'Pricing Bridge'[variantTypes.data.attributes.name]
			VAR exp        = 'Pricing Bridge'[expansion.data.attributes.code]
			VAR titleSub   = RELATED(Cards[title + subtitle])
			
			-- Card number: take text before "/", pad left to 4
			VAR cnText     = 'Pricing Bridge'[cardNumber]
			VAR slashPos   = SEARCH("/", cnText, 1, 0)        -- 0 if not found
			VAR cnLeft     = IF(slashPos > 0, LEFT(cnText, slashPos - 1), cnText)
			VAR cardNum    = RIGHT("0000" & cnLeft, 4)
			VAR cardNumOut = IF(vId = "25026", "1063", cardNum)
			
			-- Common checks
			VAR hasOPCode    = LEFT(vName, 2) IN { "GC", "PQ", "RQ", "SQ", "SS" } || exp IN {"P25"}
			VAR isPlacement  = CONTAINSSTRING(vName, "Champion")
			                || CONTAINSSTRING(vName, "Finalist")
			                || CONTAINSSTRING(vName, "Top 4")
			                || CONTAINSSTRING(vName, "Top 8")
			                || CONTAINSSTRING(vName, "Top 16")
			
			VAR isJudge        = CONTAINSSTRING(vName, "Judge")
			VAR isEventExcl    = vId IN { "981","982","8608" } || vName = "Event Exclusive"
			VAR isPrerelease   = vId IN { "8664","8834","19456","19461" } || CONTAINSSTRING(vName, "Prerelease")
			VAR isWPlayId      = vId IN { "8667","8672","8677","8682","8687","8692","8697","8702","2668","1828","2673","1969","2681","1739","1818","2659","15614","15618","15622","15626","15630","15634","15638","15642" }
			VAR isWPlayName    = vName IN { "Weekly Play", "Weekly Play Foil" }
			VAR isWeeklyPlay   = isWPlayId || isWPlayName
			VAR isConvExcl     = vName = "Convention Exclusive"
			VAR isHyperspaceId = vId IN { "8664","8834","19456","19461" }
			VAR inLaunchSets   = exp IN { "SOR","SHD","TWI" }
			VAR isNumberAdd    = exp = "P25" && (vName = "SQ Event Pack" || ISBLANK(vName))
			
			-- Small pieces
			VAR setCode = LEFT(exp, 3)
			VAR convExYr = RIGHT(exp, 2)
			VAR opSuffixName = MID(vName, 4, LEN(vName) - 3)   -- drop first 3 chars like "GC "
			
			-- Prefix
			VAR prefix =
			    SWITCH(
			        TRUE(),
			        isJudge,           "JDG",
			        isEventExcl,       "EEP",
			        isPrerelease,      "PRE",
			        isWeeklyPlay,      setCode & "-WPP",
			        isConvExcl,        "CE20" & convExYr,
			        hasOPCode,         "OPP",
			        exp
			    )
			
			-- Suffix
			VAR suffix =
			    SWITCH(
			        TRUE(),
			        isEventExcl,                                         "",
			        hasOPCode && isPlacement,                            "_" & titleSub & " (" & opSuffixName & ")",
			        hasOPCode && isNumberAdd,                            "_" & titleSub & " (" & 'Pricing Bridge'[cardNumber] & ")",
			        hasOPCode || vName = "Prerelease Promo" || isJudge,  "_" & titleSub,
			        isHyperspaceId,                                      "_" & titleSub & " (Hyperspace)",
			        NOT CONTAINSSTRING(vName, "Foil") && vName <> "Showcase" && inLaunchSets,   "_Standard",
			        (CONTAINSSTRING(vName, "Foil") || vName = "Showcase") && inLaunchSets, "_Foil",
			        BLANK()
			    )
			
			RETURN
			    prefix & "_" & cardNumOut & suffix
		lineageTag: 35f1265e-8d9a-49b1-9857-a0e2979dcb13
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column id
		dataType: string
		lineageTag: bc5d46bb-0e40-46d2-8282-88a0ef4802bb
		summarizeBy: none
		sourceColumn: id

		annotation SummarizationSetBy = Automatic

	partition 'Pricing Bridge' = m
		mode: import
		queryGroup: 'API Tables'
		source =
				let
				    Source = Base,
				    #"Removed Columns" = Table.RemoveColumns(Source,{"title", "subtitle", "artist", "artFrontHorizontal", "artBackHorizontal", "hasFoil", "cost", "hp", "power", "text", "textStyled", "deployBox", "deployBoxStyled", "epicAction", "epicActionStyled", "linkHtml", "createdAt", "updatedAt", "publishedAt", "locale", "hyperspace", "unique", "showcase", "rules", "rulesStyled", "serialCode", "upgradeHp", "upgradePower", "artFront", "artBack", "artThumbnail", "localizations", "aspects", "aspectDuplicates", "type.data.attributes.name", "type2", "traits", "arenas", "keywords", "rarity", "variantOf", "reprintOf", "validationId", "cardId"}),
				    #"Expanded expansion" = Table.ExpandRecordColumn(#"Removed Columns", "expansion", {"data"}, {"expansion.data"}),
				    #"Expanded expansion.data" = Table.ExpandRecordColumn(#"Expanded expansion", "expansion.data", {"id", "attributes"}, {"expansion.data.id", "expansion.data.attributes"}),
				    #"Expanded expansion.data.attributes" = Table.ExpandRecordColumn(#"Expanded expansion.data", "expansion.data.attributes", {"code"}, {"expansion.data.attributes.code"}),
				    #"Expanded variantTypes" = Table.ExpandRecordColumn(#"Expanded expansion.data.attributes", "variantTypes", {"data"}, {"variantTypes.data"}),
				    #"Expanded variantTypes.data" = Table.ExpandListColumn(#"Expanded variantTypes", "variantTypes.data"),
				    #"Expanded variantTypes.data1" = Table.ExpandRecordColumn(#"Expanded variantTypes.data", "variantTypes.data", {"id", "attributes"}, {"variantTypes.data.id", "variantTypes.data.attributes"}),
				    #"Expanded variantTypes.data.attributes" = Table.ExpandRecordColumn(#"Expanded variantTypes.data1", "variantTypes.data.attributes", {"name"}, {"variantTypes.data.attributes.name"}),
				    #"Changed Type" = Table.TransformColumnTypes(#"Expanded variantTypes.data.attributes",{{"cardNumber", Int64.Type}, {"cardCount", Int64.Type}})
				in
				    #"Changed Type"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

