{
  "version": "1.0",
  "conceptualSchemaSettings": {},
  "queries": [
    {
      "name": "Page",
      "lineageTag": "14c5a33f-a195-49a7-8f49-e2528ef7b586",
      "queryGroupId": "61fc82f3-0e6d-4ab9-a233-bee69139c18b",
      "navigationStepName": "Navigation",
      "text": [
        "1 meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Number",
      "isHidden": false
    },
    {
      "name": "Rows",
      "lineageTag": "42cb74ab-469d-45b9-a023-3220681a6120",
      "queryGroupId": "61fc82f3-0e6d-4ab9-a233-bee69139c18b",
      "navigationStepName": "Navigation",
      "text": [
        "25 meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true]"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Number",
      "isHidden": false
    },
    {
      "name": "GetSWUAPIPages",
      "lineageTag": "f3500b2c-bc7b-43ed-ad35-60ef15409c00",
      "queryGroupId": "49b0ce1f-0adf-4cff-85b2-5591da126c4c",
      "navigationStepName": "Navigation",
      "text": [
        "(page as number) =>",
        "let",
        "     Source = Json.Document(Web.Contents(\"https://admin.starwarsunlimited.com/api/card-list?locale=en&pagination[page]=\" & Number.ToText(page) & \"&pagination[pageSize]=\" & Number.ToText(#\"Rows\") & \"\")),",
        "     data = Source[data]",
        "in",
        "     data"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Base",
      "lineageTag": "cfa3681b-85bf-4777-b381-edcc82874357",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = List.Generate(",
        "        () => [Result = try GetSWUAPIPages(1) otherwise null, pagenumber=1],",
        "        each List.IsEmpty([Result]) = false,",
        "        each [Result = try GetSWUAPIPages(pagenumber) otherwise null, pagenumber = [pagenumber] + 1],",
        "        each [Result]),",
        "    #\"Converted to Table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
        "    #\"Expanded Column1\" = Table.ExpandListColumn(#\"Converted to Table\", \"Column1\"),",
        "    #\"Expanded Column2\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"Column1\", {\"attributes\"}, {\"attributes\"}),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Expanded Column2\", \"attributes\", {\"title\", \"subtitle\", \"cardNumber\", \"cardCount\", \"artist\", \"artFrontHorizontal\", \"artBackHorizontal\", \"hasFoil\", \"cost\", \"hp\", \"power\", \"text\", \"textStyled\", \"deployBox\", \"deployBoxStyled\", \"epicAction\", \"epicActionStyled\", \"linkHtml\", \"cardId\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"hyperspace\", \"unique\", \"showcase\", \"cardUid\", \"rules\", \"rulesStyled\", \"serialCode\", \"upgradeHp\", \"upgradePower\", \"artFront\", \"artBack\", \"artThumbnail\", \"localizations\", \"aspects\", \"aspectDuplicates\", \"type\", \"type2\", \"traits\", \"arenas\", \"keywords\", \"rarity\", \"expansion\", \"variantTypes\", \"variantOf\", \"reprintOf\", \"validationId\"}, {\"title\", \"subtitle\", \"cardNumber\", \"cardCount\", \"artist\", \"artFrontHorizontal\", \"artBackHorizontal\", \"hasFoil\", \"cost\", \"hp\", \"power\", \"text\", \"textStyled\", \"deployBox\", \"deployBoxStyled\", \"epicAction\", \"epicActionStyled\", \"linkHtml\", \"cardId\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"hyperspace\", \"unique\", \"showcase\", \"cardUid\", \"rules\", \"rulesStyled\", \"serialCode\", \"upgradeHp\", \"upgradePower\", \"artFront\", \"artBack\", \"artThumbnail\", \"localizations\", \"aspects\", \"aspectDuplicates\", \"type\", \"type2\", \"traits\", \"arenas\", \"keywords\", \"rarity\", \"expansion\", \"variantTypes\", \"variantOf\", \"reprintOf\", \"validationId\"})",
        "in",
        "    #\"Expanded attributes\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = List.Generate(\\n        () => [Result = try Dynamic(1) otherwise null, pagenumber=1],\\n        each List.IsEmpty([Result]) = false,\\n        each [Result = try Dynamic(pagenumber) otherwise null, pagenumber = [pagenumber] + 1],\\n        each [Result]),\\n    #\\\"Converted to Table\\\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\\n    #\\\"Expanded Column1\\\" = Table.ExpandListColumn(#\\\"Converted to Table\\\", \\\"Column1\\\"),\\n    #\\\"Expanded Column2\\\" = Table.ExpandRecordColumn(#\\\"Expanded Column1\\\", \\\"Column1\\\", {\\\"attributes\\\"}, {\\\"attributes\\\"}),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded Column2\\\", \\\"attributes\\\", {\\\"title\\\", \\\"subtitle\\\", \\\"cardNumber\\\", \\\"cardCount\\\", \\\"artist\\\", \\\"artFrontHorizontal\\\", \\\"artBackHorizontal\\\", \\\"hasFoil\\\", \\\"cost\\\", \\\"hp\\\", \\\"power\\\", \\\"text\\\", \\\"textStyled\\\", \\\"deployBox\\\", \\\"deployBoxStyled\\\", \\\"epicAction\\\", \\\"epicActionStyled\\\", \\\"linkHtml\\\", \\\"cardId\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\", \\\"hyperspace\\\", \\\"unique\\\", \\\"showcase\\\", \\\"cardUid\\\", \\\"rules\\\", \\\"rulesStyled\\\", \\\"serialCode\\\", \\\"upgradeHp\\\", \\\"upgradePower\\\", \\\"artFront\\\", \\\"artBack\\\", \\\"artThumbnail\\\", \\\"localizations\\\", \\\"aspects\\\", \\\"aspectDuplicates\\\", \\\"type\\\", \\\"type2\\\", \\\"traits\\\", \\\"arenas\\\", \\\"keywords\\\", \\\"rarity\\\", \\\"expansion\\\", \\\"variantTypes\\\", \\\"variantOf\\\", \\\"reprintOf\\\", \\\"validationId\\\"}, {\\\"title\\\", \\\"subtitle\\\", \\\"cardNumber\\\", \\\"cardCount\\\", \\\"artist\\\", \\\"artFrontHorizontal\\\", \\\"artBackHorizontal\\\", \\\"hasFoil\\\", \\\"cost\\\", \\\"hp\\\", \\\"power\\\", \\\"text\\\", \\\"textStyled\\\", \\\"deployBox\\\", \\\"deployBoxStyled\\\", \\\"epicAction\\\", \\\"epicActionStyled\\\", \\\"linkHtml\\\", \\\"cardId\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\", \\\"hyperspace\\\", \\\"unique\\\", \\\"showcase\\\", \\\"cardUid\\\", \\\"rules\\\", \\\"rulesStyled\\\", \\\"serialCode\\\", \\\"upgradeHp\\\", \\\"upgradePower\\\", \\\"artFront\\\", \\\"artBack\\\", \\\"artThumbnail\\\", \\\"localizations\\\", \\\"aspects\\\", \\\"aspectDuplicates\\\", \\\"type\\\", \\\"type2\\\", \\\"traits\\\", \\\"arenas\\\", \\\"keywords\\\", \\\"rarity\\\", \\\"expansion\\\", \\\"variantTypes\\\", \\\"variantOf\\\", \\\"reprintOf\\\", \\\"validationId\\\"})\\nin\\n    #\\\"Expanded attributes\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Cards Fact",
      "lineageTag": "f5ccf8cf-4182-4e72-af8b-f6dabc9b7f8c",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"cardUid\", \"aspects\", \"traits\", \"arenas\", \"keywords\", \"expansion\", \"variantTypes\"}),",
        "    #\"Expanded aspects\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"aspects\", {\"data\"}, {\"aspects.data\"}),",
        "    #\"Expanded aspects.data\" = Table.ExpandListColumn(#\"Expanded aspects\", \"aspects.data\"),",
        "    #\"Expanded aspects.data1\" = Table.ExpandRecordColumn(#\"Expanded aspects.data\", \"aspects.data\", {\"id\"}, {\"aspects.data.id\"}),",
        "    #\"Expanded traits\" = Table.ExpandRecordColumn(#\"Expanded aspects.data1\", \"traits\", {\"data\"}, {\"traits.data\"}),",
        "    #\"Expanded traits.data\" = Table.ExpandListColumn(#\"Expanded traits\", \"traits.data\"),",
        "    #\"Expanded traits.data1\" = Table.ExpandRecordColumn(#\"Expanded traits.data\", \"traits.data\", {\"id\"}, {\"traits.data.id\"}),",
        "    #\"Expanded arenas\" = Table.ExpandRecordColumn(#\"Expanded traits.data1\", \"arenas\", {\"data\"}, {\"arenas.data\"}),",
        "    #\"Expanded arenas.data\" = Table.ExpandListColumn(#\"Expanded arenas\", \"arenas.data\"),",
        "    #\"Expanded arenas.data1\" = Table.ExpandRecordColumn(#\"Expanded arenas.data\", \"arenas.data\", {\"id\"}, {\"arenas.data.id\"}),",
        "    #\"Expanded keywords\" = Table.ExpandRecordColumn(#\"Expanded arenas.data1\", \"keywords\", {\"data\"}, {\"keywords.data\"}),",
        "    #\"Expanded keywords.data\" = Table.ExpandListColumn(#\"Expanded keywords\", \"keywords.data\"),",
        "    #\"Expanded keywords.data1\" = Table.ExpandRecordColumn(#\"Expanded keywords.data\", \"keywords.data\", {\"id\"}, {\"keywords.data.id\"}),",
        "    #\"Expanded expansion\" = Table.ExpandRecordColumn(#\"Expanded keywords.data1\", \"expansion\", {\"data\"}, {\"expansion.data\"}),",
        "    #\"Expanded expansion.data\" = Table.ExpandRecordColumn(#\"Expanded expansion\", \"expansion.data\", {\"id\"}, {\"expansion.data.id\"}),",
        "    #\"Expanded variantTypes\" = Table.ExpandRecordColumn(#\"Expanded expansion.data\", \"variantTypes\", {\"data\"}, {\"variantTypes.data\"}),",
        "    #\"Expanded variantTypes.data\" = Table.ExpandListColumn(#\"Expanded variantTypes\", \"variantTypes.data\"),",
        "    #\"Expanded variantTypes.data1\" = Table.ExpandRecordColumn(#\"Expanded variantTypes.data\", \"variantTypes.data\", {\"id\"}, {\"variantTypes.data.id\"})",
        "in",
        "    #\"Expanded variantTypes.data1\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"cardUid\\\", \\\"aspects\\\", \\\"traits\\\", \\\"arenas\\\", \\\"keywords\\\", \\\"variantTypes\\\"}),\\n    #\\\"Expanded aspects\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"aspects\\\", {\\\"data\\\"}, {\\\"aspects.data\\\"}),\\n    #\\\"Expanded aspects.data\\\" = Table.ExpandListColumn(#\\\"Expanded aspects\\\", \\\"aspects.data\\\"),\\n    #\\\"Expanded aspects.data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded aspects.data\\\", \\\"aspects.data\\\", {\\\"id\\\"}, {\\\"aspects.data.id\\\"}),\\n    #\\\"Expanded traits\\\" = Table.ExpandRecordColumn(#\\\"Expanded aspects.data1\\\", \\\"traits\\\", {\\\"data\\\"}, {\\\"traits.data\\\"}),\\n    #\\\"Expanded traits.data\\\" = Table.ExpandListColumn(#\\\"Expanded traits\\\", \\\"traits.data\\\"),\\n    #\\\"Expanded traits.data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded traits.data\\\", \\\"traits.data\\\", {\\\"id\\\"}, {\\\"traits.data.id\\\"}),\\n    #\\\"Expanded arenas\\\" = Table.ExpandRecordColumn(#\\\"Expanded traits.data1\\\", \\\"arenas\\\", {\\\"data\\\"}, {\\\"arenas.data\\\"}),\\n    #\\\"Expanded arenas.data\\\" = Table.ExpandListColumn(#\\\"Expanded arenas\\\", \\\"arenas.data\\\"),\\n    #\\\"Expanded arenas.data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded arenas.data\\\", \\\"arenas.data\\\", {\\\"id\\\"}, {\\\"arenas.data.id\\\"}),\\n    #\\\"Expanded keywords\\\" = Table.ExpandRecordColumn(#\\\"Expanded arenas.data1\\\", \\\"keywords\\\", {\\\"data\\\"}, {\\\"keywords.data\\\"}),\\n    #\\\"Expanded keywords.data\\\" = Table.ExpandListColumn(#\\\"Expanded keywords\\\", \\\"keywords.data\\\"),\\n    #\\\"Expanded keywords.data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded keywords.data\\\", \\\"keywords.data\\\", {\\\"id\\\"}, {\\\"keywords.data.id\\\"}),\\n    #\\\"Expanded variantTypes\\\" = Table.ExpandRecordColumn(#\\\"Expanded keywords.data1\\\", \\\"variantTypes\\\", {\\\"data\\\"}, {\\\"variantTypes.data\\\"}),\\n    #\\\"Expanded variantTypes.data\\\" = Table.ExpandListColumn(#\\\"Expanded variantTypes\\\", \\\"variantTypes.data\\\"),\\n    #\\\"Expanded variantTypes.data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded variantTypes.data\\\", \\\"variantTypes.data\\\", {\\\"id\\\"}, {\\\"variantTypes.data.id\\\"})\\nin\\n    #\\\"Expanded variantTypes.data1\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Cards",
      "lineageTag": "8584efd8-e680-4e73-80e1-663419ce2e18",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Expanded artFront\" = Table.ExpandRecordColumn(Source, \"artFront\", {\"data\"}, {\"artFront.data\"}),",
        "    #\"Expanded artFront.data\" = Table.ExpandRecordColumn(#\"Expanded artFront\", \"artFront.data\", {\"attributes\"}, {\"artFront.data.attributes\"}),",
        "    #\"Expanded artFront.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded artFront.data\", \"artFront.data.attributes\", {\"url\"}, {\"artFront.data.attributes.url\"}),",
        "    #\"Expanded artBack\" = Table.ExpandRecordColumn(#\"Expanded artFront.data.attributes\", \"artBack\", {\"data\"}, {\"artBack.data\"}),",
        "    #\"Expanded artBack.data\" = Table.ExpandRecordColumn(#\"Expanded artBack\", \"artBack.data\", {\"attributes\"}, {\"artBack.data.attributes\"}),",
        "    #\"Expanded artBack.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded artBack.data\", \"artBack.data.attributes\", {\"url\"}, {\"artBack.data.attributes.url\"}),",
        "    #\"Expanded artThumbnail\" = Table.ExpandRecordColumn(#\"Expanded artBack.data.attributes\", \"artThumbnail\", {\"data\"}, {\"artThumbnail.data\"}),",
        "    #\"Expanded artThumbnail.data\" = Table.ExpandRecordColumn(#\"Expanded artThumbnail\", \"artThumbnail.data\", {\"attributes\"}, {\"artThumbnail.data.attributes\"}),",
        "    #\"Expanded artThumbnail.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded artThumbnail.data\", \"artThumbnail.data.attributes\", {\"url\"}, {\"artThumbnail.data.attributes.url\"}),",
        "    #\"Expanded type\" = Table.ExpandRecordColumn(#\"Expanded artThumbnail.data.attributes\", \"type\", {\"data\"}, {\"type.data\"}),",
        "    #\"Expanded type.data\" = Table.ExpandRecordColumn(#\"Expanded type\", \"type.data\", {\"attributes\"}, {\"type.data.attributes\"}),",
        "    #\"Expanded type.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded type.data\", \"type.data.attributes\", {\"name\"}, {\"type.data.attributes.name\"}),",
        "    #\"Expanded type2\" = Table.ExpandRecordColumn(#\"Expanded type.data.attributes\", \"type2\", {\"data\"}, {\"type2.data\"}),",
        "    #\"Expanded type2.data\" = Table.ExpandRecordColumn(#\"Expanded type2\", \"type2.data\", {\"attributes\"}, {\"type2.data.attributes\"}),",
        "    #\"Expanded type2.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded type2.data\", \"type2.data.attributes\", {\"name\"}, {\"type2.data.attributes.name\"}),",
        "    #\"Expanded rarity\" = Table.ExpandRecordColumn(#\"Expanded type2.data.attributes\", \"rarity\", {\"data\"}, {\"rarity.data\"}),",
        "    #\"Expanded rarity.data\" = Table.ExpandRecordColumn(#\"Expanded rarity\", \"rarity.data\", {\"attributes\"}, {\"rarity.data.attributes\"}),",
        "    #\"Expanded rarity.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded rarity.data\", \"rarity.data.attributes\", {\"name\"}, {\"rarity.data.attributes.name\"}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded rarity.data.attributes\",{\"textStyled\", \"deployBoxStyled\", \"epicActionStyled\", \"linkHtml\", \"localizations\", \"aspects\", \"traits\", \"arenas\", \"keywords\", \"variantTypes\", \"variantOf\", \"validationId\", \"cardId\", \"aspectDuplicates\", \"rulesStyled\", \"rules\"}),",
        "    #\"Expanded reprintOf\" = Table.ExpandRecordColumn(#\"Removed Columns\", \"reprintOf\", {\"data\"}, {\"reprintOf.data\"}),",
        "    #\"Expanded reprintOf.data\" = Table.ExpandRecordColumn(#\"Expanded reprintOf\", \"reprintOf.data\", {\"id\"}, {\"reprintOf.data.id\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded reprintOf.data\",{{\"cardNumber\", Int64.Type}, {\"cardCount\", Int64.Type}, {\"cost\", Int64.Type}, {\"hp\", Int64.Type}, {\"power\", Int64.Type}, {\"reprintOf.data.id\", Int64.Type}, {\"publishedAt\", type datetime}, {\"updatedAt\", type datetime}, {\"createdAt\", type datetime}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Expanded artFront\\\" = Table.ExpandRecordColumn(Source, \\\"artFront\\\", {\\\"data\\\"}, {\\\"artFront.data\\\"}),\\n    #\\\"Expanded artFront.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded artFront\\\", \\\"artFront.data\\\", {\\\"attributes\\\"}, {\\\"artFront.data.attributes\\\"}),\\n    #\\\"Expanded artFront.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded artFront.data\\\", \\\"artFront.data.attributes\\\", {\\\"url\\\"}, {\\\"artFront.data.attributes.url\\\"}),\\n    #\\\"Expanded artBack\\\" = Table.ExpandRecordColumn(#\\\"Expanded artFront.data.attributes\\\", \\\"artBack\\\", {\\\"data\\\"}, {\\\"artBack.data\\\"}),\\n    #\\\"Expanded artBack.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded artBack\\\", \\\"artBack.data\\\", {\\\"attributes\\\"}, {\\\"artBack.data.attributes\\\"}),\\n    #\\\"Expanded artBack.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded artBack.data\\\", \\\"artBack.data.attributes\\\", {\\\"url\\\"}, {\\\"artBack.data.attributes.url\\\"}),\\n    #\\\"Expanded artThumbnail\\\" = Table.ExpandRecordColumn(#\\\"Expanded artBack.data.attributes\\\", \\\"artThumbnail\\\", {\\\"data\\\"}, {\\\"artThumbnail.data\\\"}),\\n    #\\\"Expanded artThumbnail.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded artThumbnail\\\", \\\"artThumbnail.data\\\", {\\\"attributes\\\"}, {\\\"artThumbnail.data.attributes\\\"}),\\n    #\\\"Expanded artThumbnail.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded artThumbnail.data\\\", \\\"artThumbnail.data.attributes\\\", {\\\"url\\\"}, {\\\"artThumbnail.data.attributes.url\\\"}),\\n    #\\\"Expanded type\\\" = Table.ExpandRecordColumn(#\\\"Expanded artThumbnail.data.attributes\\\", \\\"type\\\", {\\\"data\\\"}, {\\\"type.data\\\"}),\\n    #\\\"Expanded type.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded type\\\", \\\"type.data\\\", {\\\"attributes\\\"}, {\\\"type.data.attributes\\\"}),\\n    #\\\"Expanded type.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded type.data\\\", \\\"type.data.attributes\\\", {\\\"name\\\"}, {\\\"type.data.attributes.name\\\"}),\\n    #\\\"Expanded type2\\\" = Table.ExpandRecordColumn(#\\\"Expanded type.data.attributes\\\", \\\"type2\\\", {\\\"data\\\"}, {\\\"type2.data\\\"}),\\n    #\\\"Expanded type2.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded type2\\\", \\\"type2.data\\\", {\\\"attributes\\\"}, {\\\"type2.data.attributes\\\"}),\\n    #\\\"Expanded type2.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded type2.data\\\", \\\"type2.data.attributes\\\", {\\\"name\\\"}, {\\\"type2.data.attributes.name\\\"}),\\n    #\\\"Expanded rarity\\\" = Table.ExpandRecordColumn(#\\\"Expanded type2.data.attributes\\\", \\\"rarity\\\", {\\\"data\\\"}, {\\\"rarity.data\\\"}),\\n    #\\\"Expanded rarity.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded rarity\\\", \\\"rarity.data\\\", {\\\"attributes\\\"}, {\\\"rarity.data.attributes\\\"}),\\n    #\\\"Expanded rarity.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded rarity.data\\\", \\\"rarity.data.attributes\\\", {\\\"name\\\"}, {\\\"rarity.data.attributes.name\\\"}),\\n    #\\\"Expanded expansion\\\" = Table.ExpandRecordColumn(#\\\"Expanded rarity.data.attributes\\\", \\\"expansion\\\", {\\\"data\\\"}, {\\\"expansion.data\\\"}),\\n    #\\\"Expanded expansion.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded expansion\\\", \\\"expansion.data\\\", {\\\"attributes\\\"}, {\\\"expansion.data.attributes\\\"}),\\n    #\\\"Expanded expansion.data.attributes\\\" = Table.ExpandRecordColumn(#\\\"Expanded expansion.data\\\", \\\"expansion.data.attributes\\\", {\\\"name\\\", \\\"code\\\"}, {\\\"expansion.data.attributes.name\\\", \\\"expansion.data.attributes.code\\\"}),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Expanded expansion.data.attributes\\\",{\\\"textStyled\\\", \\\"deployBoxStyled\\\", \\\"epicActionStyled\\\", \\\"linkHtml\\\", \\\"localizations\\\", \\\"aspects\\\", \\\"traits\\\", \\\"arenas\\\", \\\"keywords\\\", \\\"variantTypes\\\", \\\"variantOf\\\", \\\"validationId\\\", \\\"cardId\\\", \\\"aspectDuplicates\\\", \\\"rulesStyled\\\", \\\"rules\\\"}),\\n    #\\\"Expanded reprintOf\\\" = Table.ExpandRecordColumn(#\\\"Removed Columns\\\", \\\"reprintOf\\\", {\\\"data\\\"}, {\\\"reprintOf.data\\\"}),\\n    #\\\"Expanded reprintOf.data\\\" = Table.ExpandRecordColumn(#\\\"Expanded reprintOf\\\", \\\"reprintOf.data\\\", {\\\"id\\\"}, {\\\"reprintOf.data.id\\\"}),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Expanded reprintOf.data\\\",{{\\\"cardNumber\\\", Int64.Type}, {\\\"cardCount\\\", Int64.Type}, {\\\"cost\\\", Int64.Type}, {\\\"hp\\\", Int64.Type}, {\\\"power\\\", Int64.Type}, {\\\"reprintOf.data.id\\\", Int64.Type}, {\\\"publishedAt\\\", type datetime}, {\\\"updatedAt\\\", type datetime}, {\\\"createdAt\\\", type datetime}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Arenas",
      "lineageTag": "9037a05c-ebe6-475b-bad8-9e49d80b01be",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"arenas\"}),",
        "    #\"Expanded arenas\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"arenas\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded arenas\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}, {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"})",
        "in",
        "    #\"Removed Duplicates\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"arenas\\\"}),\\n    #\\\"Expanded arenas\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"arenas\\\", {\\\"data\\\"}, {\\\"data\\\"}),\\n    #\\\"Expanded data\\\" = Table.ExpandListColumn(#\\\"Expanded arenas\\\", \\\"data\\\"),\\n    #\\\"Expanded data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded data\\\", \\\"data\\\", {\\\"id\\\", \\\"attributes\\\"}, {\\\"id\\\", \\\"attributes\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Expanded data1\\\", each [id] <> null and [id] <> \\\"\\\"),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Filtered Rows\\\", \\\"attributes\\\", {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}, {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(#\\\"Expanded attributes\\\", {\\\"id\\\"})\\nin\\n    #\\\"Removed Duplicates\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Aspects",
      "lineageTag": "0153c9f8-0a76-4f42-9fb6-a954db7c9115",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"aspects\"}),",
        "    #\"Expanded aspects\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"aspects\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded aspects\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\", \"description\", \"color\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"englishName\", \"sortValue\"}, {\"name\", \"description\", \"color\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"englishName\", \"sortValue\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Duplicates\",{{\"sortValue\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"aspects\\\"}),\\n    #\\\"Expanded aspects\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"aspects\\\", {\\\"data\\\"}, {\\\"data\\\"}),\\n    #\\\"Expanded data\\\" = Table.ExpandListColumn(#\\\"Expanded aspects\\\", \\\"data\\\"),\\n    #\\\"Expanded data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded data\\\", \\\"data\\\", {\\\"id\\\", \\\"attributes\\\"}, {\\\"id\\\", \\\"attributes\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Expanded data1\\\", each [id] <> null and [id] <> \\\"\\\"),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Filtered Rows\\\", \\\"attributes\\\", {\\\"name\\\", \\\"description\\\", \\\"color\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\", \\\"englishName\\\", \\\"sortValue\\\"}, {\\\"name\\\", \\\"description\\\", \\\"color\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\", \\\"englishName\\\", \\\"sortValue\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(#\\\"Expanded attributes\\\", {\\\"id\\\"}),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Removed Duplicates\\\",{{\\\"sortValue\\\", Int64.Type}})\\nin\\n    #\\\"Changed Type\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Keywords",
      "lineageTag": "22626e72-4b4b-49a6-ba5f-7ea9b0854e20",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"keywords\"}),",
        "    #\"Expanded keywords\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"keywords\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded keywords\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}, {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"})",
        "in",
        "    #\"Removed Duplicates\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"keywords\\\"}),\\n    #\\\"Expanded keywords\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"keywords\\\", {\\\"data\\\"}, {\\\"data\\\"}),\\n    #\\\"Expanded data\\\" = Table.ExpandListColumn(#\\\"Expanded keywords\\\", \\\"data\\\"),\\n    #\\\"Expanded data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded data\\\", \\\"data\\\", {\\\"id\\\", \\\"attributes\\\"}, {\\\"id\\\", \\\"attributes\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Expanded data1\\\", each [id] <> null and [id] <> \\\"\\\"),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Filtered Rows\\\", \\\"attributes\\\", {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}, {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(#\\\"Expanded attributes\\\", {\\\"id\\\"})\\nin\\n    #\\\"Removed Duplicates\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Exception",
      "isHidden": false
    },
    {
      "name": "Rules",
      "lineageTag": "19c40b99-5df2-4016-9d0d-38fabceb7826",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"cardUid\", \"rulesStyled\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each [rulesStyled] <> null and [rulesStyled] <> \"\"),",
        "    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"</td></tr></tbody></table></figure>\",\"\",Replacer.ReplaceText,{\"rulesStyled\"}),",
        "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"<figure class=\"\"table\"\"><table><tbody><tr><td>\",\"\",Replacer.ReplaceText,{\"rulesStyled\"}),",
        "    #\"Trimmed Text\" = Table.TransformColumns(#\"Replaced Value1\",{{\"rulesStyled\", Text.Trim, type text}}),",
        "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Trimmed Text\", \"rulesStyled\", Splitter.SplitTextByDelimiter(\"</td></tr><tr><td>\", QuoteStyle.Csv), {\"rulesStyled.1\", \"rulesStyled.2\", \"rulesStyled.3\", \"rulesStyled.4\", \"rulesStyled.5\", \"rulesStyled.6\"}),",
        "    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Split Column by Delimiter\", {\"cardUid\"}, \"Attribute\", \"Value\"),",
        "    #\"Split Column by Delimiter1\" = Table.SplitColumn(#\"Unpivoted Other Columns\", \"Value\", Splitter.SplitTextByDelimiter(\"</td><td>\", QuoteStyle.Csv), {\"Value.1\", \"Value.2\", \"Value.3\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Split Column by Delimiter1\",{{\"Value.1\", type date}, {\"Value.2\", type text}, {\"Value.3\", type text}}),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Value.3\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Value.1\", \"date\"}, {\"Value.2\", \"ruling\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"cardUid\\\", \\\"rulesStyled\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Removed Other Columns\\\", each [rulesStyled] <> null and [rulesStyled] <> \\\"\\\"),\\n    #\\\"Replaced Value\\\" = Table.ReplaceValue(#\\\"Filtered Rows\\\",\\\"</td></tr></tbody></table></figure>\\\",\\\"\\\",Replacer.ReplaceText,{\\\"rulesStyled\\\"}),\\n    #\\\"Replaced Value1\\\" = Table.ReplaceValue(#\\\"Replaced Value\\\",\\\"<figure class=\\\"\\\"table\\\"\\\"><table><tbody><tr><td>\\\",\\\"\\\",Replacer.ReplaceText,{\\\"rulesStyled\\\"}),\\n    #\\\"Trimmed Text\\\" = Table.TransformColumns(#\\\"Replaced Value1\\\",{{\\\"rulesStyled\\\", Text.Trim, type text}}),\\n    #\\\"Split Column by Delimiter\\\" = Table.SplitColumn(#\\\"Trimmed Text\\\", \\\"rulesStyled\\\", Splitter.SplitTextByDelimiter(\\\"</td></tr><tr><td>\\\", QuoteStyle.Csv), {\\\"rulesStyled.1\\\", \\\"rulesStyled.2\\\", \\\"rulesStyled.3\\\", \\\"rulesStyled.4\\\", \\\"rulesStyled.5\\\", \\\"rulesStyled.6\\\"}),\\n    #\\\"Unpivoted Other Columns\\\" = Table.UnpivotOtherColumns(#\\\"Split Column by Delimiter\\\", {\\\"cardUid\\\"}, \\\"Attribute\\\", \\\"Value\\\"),\\n    #\\\"Split Column by Delimiter1\\\" = Table.SplitColumn(#\\\"Unpivoted Other Columns\\\", \\\"Value\\\", Splitter.SplitTextByDelimiter(\\\"</td><td>\\\", QuoteStyle.Csv), {\\\"Value.1\\\", \\\"Value.2\\\", \\\"Value.3\\\"}),\\n    #\\\"Changed Type\\\" = Table.TransformColumnTypes(#\\\"Split Column by Delimiter1\\\",{{\\\"Value.1\\\", type date}, {\\\"Value.2\\\", type text}, {\\\"Value.3\\\", type text}}),\\n    #\\\"Removed Columns\\\" = Table.RemoveColumns(#\\\"Changed Type\\\",{\\\"Value.3\\\"}),\\n    #\\\"Renamed Columns\\\" = Table.RenameColumns(#\\\"Removed Columns\\\",{{\\\"Value.1\\\", \\\"date\\\"}, {\\\"Value.2\\\", \\\"ruling\\\"}})\\nin\\n    #\\\"Renamed Columns\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Traits",
      "lineageTag": "db73ea23-7376-4935-aa97-4c6152218161",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"traits\"}),",
        "    #\"Expanded traits\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"traits\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded traits\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}, {\"name\", \"description\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"})",
        "in",
        "    #\"Removed Duplicates\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"traits\\\"}),\\n    #\\\"Expanded traits\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"traits\\\", {\\\"data\\\"}, {\\\"data\\\"}),\\n    #\\\"Expanded data\\\" = Table.ExpandListColumn(#\\\"Expanded traits\\\", \\\"data\\\"),\\n    #\\\"Expanded data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded data\\\", \\\"data\\\", {\\\"id\\\", \\\"attributes\\\"}, {\\\"id\\\", \\\"attributes\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Expanded data1\\\", each [id] <> null and [id] <> \\\"\\\"),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Filtered Rows\\\", \\\"attributes\\\", {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}, {\\\"name\\\", \\\"description\\\", \\\"createdAt\\\", \\\"updatedAt\\\", \\\"publishedAt\\\", \\\"locale\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(#\\\"Expanded attributes\\\", {\\\"id\\\"})\\nin\\n    #\\\"Removed Duplicates\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Variants",
      "lineageTag": "bd5dcb25-4563-427b-92a8-208690893b1c",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"variantTypes\"}),",
        "    #\"Expanded variantTypes\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"variantTypes\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded variantTypes\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\"}, {\"name\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"})",
        "in",
        "    #\"Removed Duplicates\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Base,\\n    #\\\"Removed Other Columns\\\" = Table.SelectColumns(Source,{\\\"variantTypes\\\"}),\\n    #\\\"Expanded variantTypes\\\" = Table.ExpandRecordColumn(#\\\"Removed Other Columns\\\", \\\"variantTypes\\\", {\\\"data\\\"}, {\\\"data\\\"}),\\n    #\\\"Expanded data\\\" = Table.ExpandListColumn(#\\\"Expanded variantTypes\\\", \\\"data\\\"),\\n    #\\\"Expanded data1\\\" = Table.ExpandRecordColumn(#\\\"Expanded data\\\", \\\"data\\\", {\\\"id\\\", \\\"attributes\\\"}, {\\\"id\\\", \\\"attributes\\\"}),\\n    #\\\"Filtered Rows\\\" = Table.SelectRows(#\\\"Expanded data1\\\", each [id] <> null and [id] <> \\\"\\\"),\\n    #\\\"Expanded attributes\\\" = Table.ExpandRecordColumn(#\\\"Filtered Rows\\\", \\\"attributes\\\", {\\\"name\\\"}, {\\\"name\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(#\\\"Expanded attributes\\\", {\\\"id\\\"})\\nin\\n    #\\\"Removed Duplicates\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Homepage Links",
      "lineageTag": "321aee7b-6ff3-42cd-8011-d1d9ea36e5e1",
      "queryGroupId": "f8d183af-3d48-4783-81e9-4f49b5231698",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    #\"HTML Code\" = Web.BrowserContents(\"https://nexus.cascadegames.com/\"),",
        "    #\"Converted to Table\" = #table(1, {{#\"HTML Code\"}}),",
        "    ExtractedLinks = Table.TransformColumns(#\"Converted to Table\", {\"Column1\", each Text.Split(_, \"<a\")}),",
        "    ExpandedLinks = Table.ExpandListColumn(ExtractedLinks, \"Column1\"),",
        "    ExtractHyperlinks = Table.AddColumn(ExpandedLinks, \"Hyperlink\", each Text.BetweenDelimiters([Column1], \"href=\"\"\", \"\"\"\")),",
        "    ExtractLinkText = Table.AddColumn(ExtractHyperlinks, \"LinkText\", each Text.BetweenDelimiters([Column1], \">\", \"</a>\")),",
        "    CleanedTable = Table.SelectColumns(ExtractLinkText, {\"Hyperlink\", \"LinkText\"}),",
        "    #\"Added Custom\" = Table.AddColumn(CleanedTable, \"Custom\", each if Text.StartsWith([Hyperlink], \"http\") then [Hyperlink] else \"https://nexus.cascadegames.com\" & [Hyperlink]),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Custom\", each ([Hyperlink] <> \"#\")),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Custom\", \"WebLink\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Resource Links",
      "lineageTag": "15aa0470-41e9-44b1-a8c7-01bf344200d9",
      "queryGroupId": "f8d183af-3d48-4783-81e9-4f49b5231698",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    #\"HTML Code\" = Web.BrowserContents(\"https://nexus.cascadegames.com/resources/\"),",
        "    #\"Converted to Table\" = #table(1, {{#\"HTML Code\"}}),",
        "    ExtractedLinks = Table.TransformColumns(#\"Converted to Table\", {\"Column1\", each Text.Split(_, \"<a\")}),",
        "    ExpandedLinks = Table.ExpandListColumn(ExtractedLinks, \"Column1\"),",
        "    ExtractHyperlinks = Table.AddColumn(ExpandedLinks, \"Hyperlink\", each Text.BetweenDelimiters([Column1], \"href=\"\"\", \"\"\"\")),",
        "    ExtractLinkText = Table.AddColumn(ExtractHyperlinks, \"LinkText\", each Text.BetweenDelimiters([Column1], \">\", \"</a>\")),",
        "    CleanedTable = Table.SelectColumns(ExtractLinkText, {\"Hyperlink\", \"LinkText\"}),",
        "    #\"Added Custom\" = Table.AddColumn(CleanedTable, \"Custom\", each if Text.StartsWith([Hyperlink], \"http\") then [Hyperlink] else \"https://nexus.cascadegames.com\" & [Hyperlink]),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Custom\", each ([Hyperlink] <> \"#\")),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Custom\", \"WebLink\"}})",
        "in",
        "    #\"Renamed Columns\""
      ],
      "loadAsTableDisabled": true,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Judge Program Links",
      "lineageTag": "227a45c2-131a-4fa2-a8db-c789ed5b1542",
      "queryGroupId": "f8d183af-3d48-4783-81e9-4f49b5231698",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.Combine({#\"Homepage Links\", #\"Resource Links\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(Source, {\"WebLink\"})",
        "in",
        "    #\"Removed Duplicates\""
      ],
      "isDirectQuery": false,
      "lastLoadedAsTableFormulaText": "{\"IncludesReferencedQueries\":false,\"RootFormulaText\":\"let\\n    Source = Table.Combine({#\\\"Homepage Links\\\", #\\\"Resource Links\\\"}),\\n    #\\\"Removed Duplicates\\\" = Table.Distinct(Source, {\\\"WebLink\\\"})\\nin\\n    #\\\"Removed Duplicates\\\"\",\"ReferencedQueriesFormulaText\":{}}",
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Sets",
      "lineageTag": "53c5afd4-ed16-47ca-a5f1-525ba52cdd87",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"expansion\"}),",
        "    #\"Expanded expansion\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"expansion\", {\"data\"}, {\"data\"}),",
        "    #\"Expanded data\" = Table.ExpandRecordColumn(#\"Expanded expansion\", \"data\", {\"id\", \"attributes\"}, {\"id\", \"attributes\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data\", each [id] <> null and [id] <> \"\"),",
        "    #\"Expanded attributes\" = Table.ExpandRecordColumn(#\"Filtered Rows\", \"attributes\", {\"name\", \"description\", \"code\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"sortValue\"}, {\"name\", \"description\", \"code\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"sortValue\"}),",
        "    #\"Removed Duplicates\" = Table.Distinct(#\"Expanded attributes\", {\"id\"}),",
        "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Duplicates\",{{\"sortValue\", Int64.Type}})",
        "in",
        "    #\"Changed Type\""
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": false,
      "resultType": "Table",
      "isHidden": false
    },
    {
      "name": "Groups",
      "lineageTag": "878ef626-98c7-4118-a732-40c82bbeafa8",
      "queryGroupId": "60166355-6630-42da-bbb1-ddf347fc0a15",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "     Source = Json.Document(Web.Contents(\"https://tcgcsv.com/tcgplayer/79/groups\")),",
        "     data = Source[results],",
        "    #\"Converted to Table\" = Table.FromList(data, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
        "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"groupId\", \"name\", \"abbreviation\", \"isSupplemental\", \"publishedOn\", \"modifiedOn\", \"categoryId\"}, {\"groupId\", \"name\", \"abbreviation\", \"isSupplemental\", \"publishedOn\", \"modifiedOn\", \"categoryId\"})",
        "in",
        "    #\"Expanded Column1\""
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "GetGroupProducts",
      "lineageTag": "d5deeb59-19a3-4587-8d3c-29cf31ef0e98",
      "queryGroupId": "49b0ce1f-0adf-4cff-85b2-5591da126c4c",
      "navigationStepName": "Navigation",
      "text": [
        "(group as number) =>",
        "let",
        "    Source = Json.Document(",
        "        Web.Contents(",
        "            \"https://tcgcsv.com\", ",
        "            [",
        "                RelativePath = \"/tcgplayer/79/\" & Number.ToText(group) & \"/products\"",
        "            ]",
        "        )",
        "    ),",
        "    data = Source[results]",
        "in",
        "    data"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "GetGroupPrices",
      "lineageTag": "d150f783-714e-4da5-bb2b-be980313c636",
      "queryGroupId": "49b0ce1f-0adf-4cff-85b2-5591da126c4c",
      "navigationStepName": "Navigation",
      "text": [
        "(group as number) =>",
        "let",
        "    Source = Json.Document(",
        "        Web.Contents(",
        "            \"https://tcgcsv.com\", ",
        "            [",
        "                RelativePath = \"/tcgplayer/79/\" & Number.ToText(group) & \"/prices\"",
        "            ]",
        "        )",
        "    ),",
        "    data = Source[results]",
        "in",
        "    data"
      ],
      "loadAsTableDisabled": true,
      "resultType": "Function",
      "isHidden": false
    },
    {
      "name": "Products",
      "lineageTag": "bc50e7e4-6317-4fd0-8909-14e74f798e7f",
      "queryGroupId": "60166355-6630-42da-bbb1-ddf347fc0a15",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    // Reference your Groups table",
        "    groupTable = Groups,",
        "",
        "    // Get just the groupId column as a list",
        "    groupIds = groupTable[groupId],",
        "",
        "    // Call the function for each groupId",
        "    results = List.Transform(groupIds, each ",
        "        [ ",
        "            group = _, ",
        "            data = try GetGroupProducts(_) otherwise null",
        "        ]",
        "    ),",
        "",
        "    // Remove any nulls (failed API calls)",
        "    cleanResults = List.Select(results, each [data] <> null),",
        "    #\"Converted to Table\" = Table.FromList(cleanResults, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
        "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"group\", \"data\"}, {\"group\", \"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded Column1\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"productId\", \"name\", \"cleanName\", \"imageUrl\", \"categoryId\", \"groupId\", \"url\", \"modifiedOn\", \"imageCount\", \"presaleInfo\", \"extendedData\"}, {\"productId\", \"name\", \"cleanName\", \"imageUrl\", \"categoryId\", \"groupId\", \"url\", \"modifiedOn\", \"imageCount\", \"presaleInfo\", \"extendedData\"}),",
        "    #\"Expanded extendedData\" = Table.ExpandListColumn(#\"Expanded data1\", \"extendedData\"),",
        "    #\"Expanded extendedData1\" = Table.ExpandRecordColumn(#\"Expanded extendedData\", \"extendedData\", {\"name\", \"displayName\", \"value\"}, {\"name.1\", \"displayName\", \"value\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded extendedData1\", each ([name.1] = \"Number\")),",
        "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"name.1\", \"displayName\", \"presaleInfo\"}),",
        "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"value\", \"cardNumber\"}}),",
        "    #\"Merged Queries\" = Table.NestedJoin(#\"Renamed Columns\", {\"group\"}, Groups, {\"groupId\"}, \"Groups\", JoinKind.LeftOuter),",
        "    #\"Expanded Groups\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Groups\", {\"name\", \"abbreviation\"}, {\"name.1\", \"abbreviation\"}),",
        "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded Groups\",{{\"name.1\", \"setName\"}}),",
        "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns1\",{\"group\", \"productId\", \"name\", \"cleanName\", \"imageUrl\", \"categoryId\", \"groupId\", \"url\", \"modifiedOn\", \"imageCount\", \"cardNumber\", \"abbreviation\", \"setName\"})",
        "in",
        "    #\"Reordered Columns\""
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "Prices",
      "lineageTag": "0bb00db4-f673-4919-a97d-898f34c83a0a",
      "queryGroupId": "60166355-6630-42da-bbb1-ddf347fc0a15",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    // Reference your Groups table",
        "    groupTable = Groups,",
        "",
        "    // Get just the groupId column as a list",
        "    groupIds = groupTable[groupId],",
        "",
        "    // Call the function for each groupId",
        "    results = List.Transform(groupIds, each ",
        "        [ ",
        "            group = _, ",
        "            data = try GetGroupPrices(_) otherwise null",
        "        ]",
        "    ),",
        "",
        "    // Remove any nulls (failed API calls)",
        "    cleanResults = List.Select(results, each [data] <> null),",
        "    #\"Converted to Table\" = Table.FromList(cleanResults, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
        "    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"group\", \"data\"}, {\"group\", \"data\"}),",
        "    #\"Expanded data\" = Table.ExpandListColumn(#\"Expanded Column1\", \"data\"),",
        "    #\"Expanded data1\" = Table.ExpandRecordColumn(#\"Expanded data\", \"data\", {\"productId\", \"lowPrice\", \"midPrice\", \"highPrice\", \"marketPrice\", \"directLowPrice\", \"subTypeName\"}, {\"productId\", \"lowPrice\", \"midPrice\", \"highPrice\", \"marketPrice\", \"directLowPrice\", \"subTypeName\"}),",
        "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded data1\", each [productId] <> null and [productId] <> \"\")",
        "in",
        "    #\"Filtered Rows\""
      ],
      "isDirectQuery": false,
      "loadAsTableDisabled": true,
      "resultType": "Table"
    },
    {
      "name": "Pricing",
      "lineageTag": "114606d0-90b6-4bc4-9289-097dd5ff0fe8",
      "queryGroupId": "60166355-6630-42da-bbb1-ddf347fc0a15",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Table.NestedJoin(Products, {\"productId\", \"group\"}, Prices, {\"productId\", \"group\"}, \"Prices\", JoinKind.LeftOuter),",
        "    #\"Expanded Prices\" = Table.ExpandTableColumn(Source, \"Prices\", {\"lowPrice\", \"midPrice\", \"highPrice\", \"marketPrice\", \"directLowPrice\", \"subTypeName\"}, {\"lowPrice\", \"midPrice\", \"highPrice\", \"marketPrice\", \"directLowPrice\", \"subTypeName\"}),",
        "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded Prices\",{\"group\", \"productId\", \"name\", \"cleanName\", \"imageUrl\", \"categoryId\", \"groupId\", \"url\", \"modifiedOn\", \"imageCount\", \"cardNumber\", \"abbreviation\", \"setName\", \"subTypeName\", \"lowPrice\", \"midPrice\", \"highPrice\", \"marketPrice\", \"directLowPrice\"})",
        "in",
        "    #\"Reordered Columns\""
      ],
      "isDirectQuery": false,
      "resultType": "Table"
    },
    {
      "name": "Pricing Bridge",
      "queryGroupId": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "navigationStepName": "Navigation",
      "text": [
        "let",
        "    Source = Base,",
        "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"title\", \"subtitle\", \"artist\", \"artFrontHorizontal\", \"artBackHorizontal\", \"hasFoil\", \"cost\", \"hp\", \"power\", \"text\", \"textStyled\", \"deployBox\", \"deployBoxStyled\", \"epicAction\", \"epicActionStyled\", \"linkHtml\", \"createdAt\", \"updatedAt\", \"publishedAt\", \"locale\", \"hyperspace\", \"unique\", \"showcase\", \"rules\", \"rulesStyled\", \"serialCode\", \"upgradeHp\", \"upgradePower\", \"artFront\", \"artBack\", \"artThumbnail\", \"localizations\", \"aspects\", \"aspectDuplicates\", \"type\", \"type2\", \"traits\", \"arenas\", \"keywords\", \"rarity\", \"variantOf\", \"reprintOf\", \"validationId\", \"cardId\"}),",
        "    #\"Expanded expansion\" = Table.ExpandRecordColumn(#\"Removed Columns\", \"expansion\", {\"data\"}, {\"expansion.data\"}),",
        "    #\"Expanded expansion.data\" = Table.ExpandRecordColumn(#\"Expanded expansion\", \"expansion.data\", {\"id\", \"attributes\"}, {\"expansion.data.id\", \"expansion.data.attributes\"}),",
        "    #\"Expanded expansion.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded expansion.data\", \"expansion.data.attributes\", {\"code\"}, {\"expansion.data.attributes.code\"}),",
        "    #\"Expanded variantTypes\" = Table.ExpandRecordColumn(#\"Expanded expansion.data.attributes\", \"variantTypes\", {\"data\"}, {\"variantTypes.data\"}),",
        "    #\"Expanded variantTypes.data\" = Table.ExpandListColumn(#\"Expanded variantTypes\", \"variantTypes.data\"),",
        "    #\"Expanded variantTypes.data1\" = Table.ExpandRecordColumn(#\"Expanded variantTypes.data\", \"variantTypes.data\", {\"id\", \"attributes\"}, {\"variantTypes.data.id\", \"variantTypes.data.attributes\"}),",
        "    #\"Expanded variantTypes.data.attributes\" = Table.ExpandRecordColumn(#\"Expanded variantTypes.data1\", \"variantTypes.data.attributes\", {\"name\"}, {\"variantTypes.data.attributes.name\"}),",
        "    #\"Sorted Rows\" = Table.Sort(#\"Expanded variantTypes.data.attributes\",{{\"cardNumber\", Order.Ascending}})",
        "in",
        "    #\"Sorted Rows\""
      ],
      "isDirectQuery": false,
      "resultType": "Table"
    }
  ],
  "queryGroups": [
    {
      "name": "Parameter",
      "id": "61fc82f3-0e6d-4ab9-a233-bee69139c18b",
      "description": ""
    },
    {
      "name": "Function",
      "id": "49b0ce1f-0adf-4cff-85b2-5591da126c4c",
      "order": 1,
      "description": ""
    },
    {
      "name": "API Tables",
      "id": "16d787c9-45ab-4d93-8d15-b7f29e007feb",
      "order": 2,
      "description": ""
    },
    {
      "name": "Cacade Tables",
      "id": "f8d183af-3d48-4783-81e9-4f49b5231698",
      "order": 3,
      "description": ""
    },
    {
      "name": "TCGPlayer Pricing",
      "id": "60166355-6630-42da-bbb1-ddf347fc0a15",
      "order": 4,
      "description": ""
    }
  ],
  "culture": "en-US",
  "firewallEnabled": true
}